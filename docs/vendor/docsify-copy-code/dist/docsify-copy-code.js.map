{"version":3,"file":"docsify-copy-code.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// Dependencies\n// =============================================================================\n// eslint-disable-next-line no-unused-vars\nimport styles from './styles.css';\n\n\n// Plugin\n// =============================================================================\nfunction docsifyCopyCode(hook, vm) {\n    hook.doneEach(function() {\n        const targetElms = Array.apply(null, document.querySelectorAll('pre[data-lang]'));\n        const i18n = {\n            buttonText: 'Copy to clipboard',\n            errorText: 'Error',\n            successText: 'Copied'\n        };\n\n        // Update i18n strings based on options and location.href\n        if (vm.config.copyCode) {\n            Object.keys(i18n).forEach(key => {\n                const textValue = vm.config.copyCode[key];\n\n                if (typeof textValue === 'string') {\n                    i18n[key] = textValue;\n                }\n                else if (typeof textValue === 'object') {\n                    Object.keys(textValue).some(match => {\n                        const isMatch = location.href.indexOf(match) > -1;\n\n                        i18n[key] = isMatch ? textValue[match] : i18n[key];\n\n                        return isMatch;\n                    });\n                }\n            });\n        }\n\n        const template = [\n            '<button class=\"docsify-copy-code-button\">',\n            `<span class=\"label\">${i18n.buttonText}</span>`,\n            `<span class=\"error\">${i18n.errorText}</span>`,\n            `<span class=\"success\">${i18n.successText}</span>`,\n            '</button>'\n        ].join('');\n\n        targetElms.forEach(elm => {\n            elm.insertAdjacentHTML('beforeend', template);\n        });\n    });\n\n    hook.mounted(function() {\n        const listenerHost = document.querySelector('.content');\n\n        listenerHost.addEventListener('click', function(evt) {\n            const isCopyCodeButton = evt.target.classList.contains('docsify-copy-code-button');\n\n            if (isCopyCodeButton) {\n                const buttonElm = evt.target.tagName === 'BUTTON' ? evt.target : evt.target.parentNode;\n                const range = document.createRange();\n                const preElm = buttonElm.parentNode;\n                const codeElm = preElm.querySelector('code');\n\n                let selection = window.getSelection();\n\n                range.selectNode(codeElm);\n                selection.removeAllRanges();\n                selection.addRange(range);\n\n                try {\n                    // Copy selected text\n                    const successful = document.execCommand('copy');\n\n                    if (successful) {\n                        buttonElm.classList.add('success');\n                        setTimeout(function() {\n                            buttonElm.classList.remove('success');\n                        }, 1000);\n                    }\n                }\n                catch(err) {\n                    // eslint-disable-next-line\n                    console.error(`docsify-copy-code: ${err}`);\n\n                    buttonElm.classList.add('error');\n                    setTimeout(function() {\n                        buttonElm.classList.remove('error');\n                    }, 1000);\n                }\n\n                selection = window.getSelection();\n\n                if (typeof selection.removeRange === 'function') {\n                    selection.removeRange(range);\n                }\n                else if (typeof selection.removeAllRanges === 'function') {\n                    selection.removeAllRanges();\n                }\n            }\n        });\n    });\n}\n\n// Deprecation warning for v1.x: stylesheet\nif (document.querySelector('link[href*=\"docsify-copy-code\"]')) {\n    // eslint-disable-next-line\n    console.warn('[Deprecation] Link to external docsify-copy-code stylesheet is no longer necessary.');\n}\n\n// Deprecation warning for v1.x: init()\nwindow.DocsifyCopyCodePlugin = {\n    init: function() {\n        return function(hook, vm) {\n            hook.ready(function() {\n                // eslint-disable-next-line\n                console.warn('[Deprecation] Manually initializing docsify-copy-code using window.DocsifyCopyCodePlugin.init() is no longer necessary.');\n            });\n        };\n    }\n};\n\nwindow.$docsify = window.$docsify || {};\nwindow.$docsify.plugins = [docsifyCopyCode].concat(window.$docsify.plugins || []);\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","docsifyCopyCode","hook","vm","doneEach","targetElms","Array","apply","querySelectorAll","i18n","buttonText","errorText","successText","config","copyCode","Object","keys","forEach","key","textValue","_typeof","some","match","isMatch","location","href","indexOf","template","join","elm","insertAdjacentHTML","mounted","listenerHost","querySelector","addEventListener","evt","isCopyCodeButton","target","classList","contains","buttonElm","tagName","parentNode","range","createRange","preElm","codeElm","selection","window","getSelection","selectNode","removeAllRanges","addRange","successful","execCommand","add","setTimeout","remove","err","console","error","removeRange","warn","DocsifyCopyCodePlugin","init","ready","$docsify","plugins","concat"],"mappings":";;;;;;;;;;;;;;;;;;;;;IAAA,SAASA,YAAYC,KAAKC;QACxB,IAAKA,aAAa,GAAIA,MAAM;QAC5B,IAAIC,WAAWD,IAAIC;QAEnB,KAAKF,cAAcG,aAAa,aAAa;YAAE;;QAE/C,IAAIC,OAAOD,SAASC,QAAQD,SAASE,qBAAqB,QAAQ;QAClE,IAAIC,QAAQH,SAASI,cAAc;QACnCD,MAAME,OAAO;QAEb,IAAIN,aAAa,OAAO;YACtB,IAAIE,KAAKK,YAAY;gBACnBL,KAAKM,aAAaJ,OAAOF,KAAKK;mBACzB;gBACLL,KAAKO,YAAYL;;eAEd;YACLF,KAAKO,YAAYL;;QAGnB,IAAIA,MAAMM,YAAY;YACpBN,MAAMM,WAAWC,UAAUb;eACtB;YACLM,MAAMK,YAAYR,SAASW,eAAed;;;;;ICf9C,SAASe,gBAAgBC,MAAMC;QAC3BD,KAAKE,SAAS;gBACJC,aAAaC,MAAMC,MAAM,MAAMlB,SAASmB,iBAAiB;gBACzDC,OAAO;gBACTC,YAAY;gBACZC,WAAW;gBACXC,aAAa;;gBAIbT,GAAGU,OAAOC,UAAU;gBACpBC,OAAOC,KAAKP,MAAMQ,QAAQ,SAAAC;wBAChBC,YAAYhB,GAAGU,OAAOC,SAASI;+BAE1BC,cAAc,UAAU;wBAC/BV,KAAKS,OAAOC;2BAEX,IAAIC,QAAOD,eAAc,UAAU;wBACpCJ,OAAOC,KAAKG,WAAWE,KAAK,SAAAC;gCAClBC,UAAUC,SAASC,KAAKC,QAAQJ,UAAU;4BAEhDb,KAAKS,OAAOK,UAAUJ,UAAUG,SAASb,KAAKS;mCAEvCK;;;;;gBAMjBI,WAAW,EACb,2EACuBlB,KAAKC,sDACLD,KAAKE,uDACHF,KAAKG,yBAC9B,cACFgB,KAAK;YAEPvB,WAAWY,QAAQ,SAAAY;gBACfA,IAAIC,mBAAmB,aAAaH;;;QAI5CzB,KAAK6B,QAAQ;gBACHC,eAAe3C,SAAS4C,cAAc;YAE5CD,aAAaE,iBAAiB,SAAS,SAASC;oBACtCC,mBAAmBD,IAAIE,OAAOC,UAAUC,SAAS;oBAEnDH,kBAAkB;wBACZI,YAAYL,IAAIE,OAAOI,YAAY,WAAWN,IAAIE,SAASF,IAAIE,OAAOK;wBACtEC,QAAQtD,SAASuD;wBACjBC,SAASL,UAAUE;wBACnBI,UAAUD,OAAOZ,cAAc;wBAEjCc,YAAYC,OAAOC;oBAEvBN,MAAMO,WAAWJ;oBACjBC,UAAUI;oBACVJ,UAAUK,SAAST;;4BAITU,aAAahE,SAASiE,YAAY;4BAEpCD,YAAY;4BACZb,UAAUF,UAAUiB,IAAI;4BACxBC,WAAW;gCACPhB,UAAUF,UAAUmB,OAAO;+BAC5B;;sBAGX,OAAMC;wBAEFC,QAAQC,mCAA4BF;wBAEpClB,UAAUF,UAAUiB,IAAI;wBACxBC,WAAW;4BACPhB,UAAUF,UAAUmB,OAAO;2BAC5B;;oBAGPV,YAAYC,OAAOC;+BAERF,UAAUc,gBAAgB,YAAY;wBAC7Cd,UAAUc,YAAYlB;2BAErB,WAAWI,UAAUI,oBAAoB,YAAY;wBACtDJ,UAAUI;;;;;;IAQ9B,IAAI9D,SAAS4C,cAAc,oCAAoC;QAE3D0B,QAAQG,KAAK;;IAIjBd,OAAOe,wBAAwB;QAC3BC,MAAM;mBACK,SAAS9D,MAAMC;gBAClBD,KAAK+D,MAAM;oBAEPN,QAAQG,KAAK;;;;;IAM7Bd,OAAOkB,WAAWlB,OAAOkB,YAAY;IACrClB,OAAOkB,SAASC,UAAU,EAAClE,kBAAiBmE,OAAOpB,OAAOkB,SAASC,WAAW;"}