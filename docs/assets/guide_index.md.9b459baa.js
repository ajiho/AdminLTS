import{_ as a,o as s,c as e,V as n}from"./chunks/framework.9a026969.js";const l="/docs/npm-run-serve.png",t="/docs/ali_pay.png",p="/docs/wechat_pay.png",_=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md"}'),o={name:"guide/index.md"},r=n(`<h2 id="💡-简介" tabindex="-1">💡 简介 <a class="header-anchor" href="#💡-简介" aria-label="Permalink to &quot;💡 简介&quot;">​</a></h2><p>bootstrap-admin是基于bootstrap(5.1.3+) 设计的一个响应式纯静态通用后台管理HTML模板,它可以适用于任何后端语言,任何项目的后台管理、只要你有bootstrap的一点点基础就可以轻松上手。旨在让喜欢用bootstrap开发后台管理系统的程序员有个愉悦的起点。</p><h2 id="🗺️-背景" tabindex="-1">🗺️ 背景 <a class="header-anchor" href="#🗺️-背景" aria-label="Permalink to &quot;🗺️ 背景&quot;">​</a></h2><p>简单交代一下背景，现在都是全面在拥抱前端框架(国内vue) ,但是开发一个小系统的后台管理的时候,原本一个后端人员可以用各自后端语言的模板引擎去渲染(curd) 就完事了，现在为了跟上现代化，连一个很小的后台管理都要用vue,那么你的开发成本又增加了,你需要先学会vue的基本语法还有vue全家桶( vue-cli、vue-router、vuex)、以及一套前端的ui库吧,比如element ui、element plus(vue3),同时前端现在更新换代特别快</p><ul><li>vue-cli-&gt;vite</li><li>vuex-&gt;pinia</li><li>vue2-&gt;vue3(typescript)</li></ul><p>我想这是部分后端人员不愿意面对的,或者说内心是有一点点抵触的，同时我看了一下国内很多后台管理系统都喜欢那种IFrame+多Tab的模式,但是样式却比较古老, 国外开源的后台模板样式虽然好看，但是都是点击刷新一整个页面的，因此在两者之间bootstrap-admin找到了一个平衡点。</p><blockquote><p>根据我个人的经验来看，很多项目是这样的，后台是用这种模板搭建的，客户端多半是(uniapp、微信小程序)</p></blockquote><blockquote><p>也许一个小项目的后台管理在不分离的情况下会更加得心应手。</p></blockquote><h2 id="⭐-关于iframe-多tab效果" tabindex="-1">⭐ 关于IFrame+多Tab效果 <a class="header-anchor" href="#⭐-关于iframe-多tab效果" aria-label="Permalink to &quot;⭐ 关于IFrame+多Tab效果&quot;">​</a></h2><p>bootstrap-admin的iframe+多tab效果的驱动来源于bootstrap-admin的官方出品的<a href="https://gitee.com/ajiho/bootstrap-quicktab" target="_blank" rel="noreferrer">bootstrap-quicktab</a>, 一个iframe多tab的后台管理系统要想体验好，tab插件的设计要足够强大才行，如果和tab有关的任何优化和建议,可以去bootstrap-quicktab仓库提交issues,顺便求一波star</p><h2 id="💬-交流" tabindex="-1">💬 交流 <a class="header-anchor" href="#💬-交流" aria-label="Permalink to &quot;💬 交流&quot;">​</a></h2><ul><li><a href="https://jq.qq.com/?_wv=1027&amp;k=WmCK50m5" target="_blank" rel="noreferrer">Q群1:284169647</a></li><li><a href="https://jq.qq.com/?_wv=1027&amp;k=aQ5vUuVC" target="_blank" rel="noreferrer">Q群2:719667795</a></li></ul><h2 id="🌱-版本对应" tabindex="-1">🌱 版本对应 <a class="header-anchor" href="#🌱-版本对应" aria-label="Permalink to &quot;🌱 版本对应&quot;">​</a></h2><table><thead><tr><th>bootstrap-admin版本</th><th>bootstrap版本</th></tr></thead><tbody><tr><td>v1.x</td><td>v5.1.3</td></tr><tr><td>v2.x</td><td>v5.3.0</td></tr></tbody></table><h2 id="📁-目录结构" tabindex="-1">📁 目录结构 <a class="header-anchor" href="#📁-目录结构" aria-label="Permalink to &quot;📁 目录结构&quot;">​</a></h2><p>开发您的项目时,只需要保留<code>dist</code>、<code>lib</code>、<code>pages</code>目录以及入口HTML文件<code>index.html</code>即可</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">├─build               构建目录</span></span>
<span class="line"><span style="color:#A6ACCD;">├─dist                生产文件目录</span></span>
<span class="line"><span style="color:#A6ACCD;">│  ├─css                 生产css目录</span></span>
<span class="line"><span style="color:#A6ACCD;">│  ├─img                 生产img目录</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─js                  生产js目录</span></span>
<span class="line"><span style="color:#A6ACCD;">├─docs                文档目录</span></span>
<span class="line"><span style="color:#A6ACCD;">├─lib                 外部依赖目录</span></span>
<span class="line"><span style="color:#A6ACCD;">├─pages               示例页面目录</span></span>
<span class="line"><span style="color:#A6ACCD;">├─.babelrc.js         Babel 插件、预设、转换配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─.browserslistrc     共用目标浏览器配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─.stylelintrc.json   stylelint配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─.eslintrc.js        eslint配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─composer.json       composer 定义文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─gulpfile.mjs        gulpfile打包配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─rollup.config.js    rollup打包配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─index.html          主页面(入口文件)</span></span>
<span class="line"><span style="color:#A6ACCD;">├─404.html            404页面(静态文件托管平台所需页面,无视即可)</span></span>
<span class="line"><span style="color:#A6ACCD;">├─LICENSE.txt         授权说明文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─package.json        npm 定义文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─README.md           README 文件</span></span>
<span class="line"><span style="color:#A6ACCD;">├─...</span></span>
<span class="line"><span style="color:#A6ACCD;">├─...</span></span></code></pre></div><h2 id="🚩-本地开发调试运行" tabindex="-1">🚩 本地开发调试运行 <a class="header-anchor" href="#🚩-本地开发调试运行" aria-label="Permalink to &quot;🚩 本地开发调试运行&quot;">​</a></h2><p>如果你需要为bootstrap-admin贡献代码,或是你发现了一些问题需要重新编译dist文件， 您需要 Node.js/npm，然后克隆/下载 repo：</p><ul><li>npm ci</li><li>npm run build(编译css/js文件、以及压缩img文件)</li><li>npm run serve(默认开启一个服务可以访问页面,端口默认9999)</li></ul><img src="`+l+'"><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>真机调试:如果您的移动设备和serve端处于同一个无线网环境下就可以直接访问第二个地址在线预览和调试查看响应式效果</p></div><p>一些别的指令的解释:</p><ul><li>npm run css(单独编译scss文件)</li><li>npm run js(单独编译js文件)</li><li>npm run css-fix(<a href="https://stylelint.io/user-guide/cli/#--fix" target="_blank" rel="noreferrer">在可能的情况下自动修复规则报告的问题</a>)</li></ul><p>更多开发指令请查看<code>gulpfile.mjs</code>文件</p><h2 id="💖-捐赠" tabindex="-1">💖 捐赠 <a class="header-anchor" href="#💖-捐赠" aria-label="Permalink to &quot;💖 捐赠&quot;">​</a></h2><p>开源不易,如果你觉得此项目的发展日后可以用上,或此时对你已有帮助,请支持我,让我继续前行</p><div style="display:flex;flex-wrap:wrap;"><img src="'+t+'"><img src="'+p+'"></div>',28),i=[r];function c(d,u,m,h,b,C){return s(),e("div",null,i)}const f=a(o,[["render",c]]);export{_ as __pageData,f as default};
